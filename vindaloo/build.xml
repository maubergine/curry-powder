<?xml version="1.0"?>

<project name="springapp" basedir="." default="usage">
    <property file="build.properties"/>

    <property name="src.dir" value="src"/>
	<property name="res.dir" value="src/main/resources"/>
    <property name="web.dir" value="webapp"/>
    <property name="build.dir" value="${web.dir}/WEB-INF/classes"/>
    <property name="name" value="vindaloo"/>

    <path id="master-classpath">
        <fileset dir="${web.dir}/WEB-INF/lib">
            <include name="*.jar"/>
        </fileset>
        <!-- We need the servlet API classes: -->
        <!--  * for Tomcat 5/6 use servlet-api.jar -->
        <!--  * for other app servers - check the docs -->
        <fileset dir="${appserver.lib}">
            <include name="servlet*.jar"/>
        </fileset>
        <pathelement path="${build.dir}"/>
    </path>

    <target name="usage" depends="stop-clean-install-restart">
        <echo message=""/>
        <echo message="${name} build file"/>
        <echo message="-----------------------------------"/>
        <echo message=""/>
        <echo message="Available targets are:"/>
        <echo message=""/>
        <echo message="build     --> Build the application"/>
        <echo message="deploy    --> Deploy application as directory"/>
        <echo message="deploywar --> Deploy application as a WAR file"/>
        <echo message="install   --> Install application in Tomcat"/>
        <echo message="reload    --> Reload application in Tomcat"/>
        <echo message="start     --> Start Tomcat application"/>
        <echo message="stop      --> Stop Tomcat application"/>
        <echo message="list      --> List Tomcat applications"/>
        <echo message=""/>
    </target>

	<fileset dir="${res.dir}" id="resources" />
	
	<target name="stop-clean-install-restart" depends="tomcat-stop, clean-install, tomcat-start-debug"/>
	
	<target name="clean-install" depends="clean, clean-server, build, deploy, deploywar"/>
	
	<target name="clean" description="Clean target folder">
		<delete dir="${build.dir}"/>
	</target>
	
	<target name="clean-server" description="Clean server">
			<delete dir="${deploy.path}/${name}"/>
		</target>
	
    <target name="build" description="Compile main source tree java files">
        <mkdir dir="${build.dir}"/>
        <javac destdir="${build.dir}" source="1.7" target="1.7" debug="true"
               deprecation="false" optimize="false" failonerror="true">
            <src path="${src.dir}"/>
            <classpath refid="master-classpath"/>
        </javac>
    	<copy todir="${build.dir}">
    		<fileset refid="resources"/>
    	</copy>
    </target>

    <target name="deploy" depends="build" description="Deploy application">
        <copy todir="${deploy.path}/${name}" preservelastmodified="true">
            <fileset dir="${web.dir}">
                <include name="**/*.*"/>
            </fileset>
        </copy>
    </target>

    <target name="deploywar" depends="build" description="Deploy application as a WAR file">
        <war destfile="${name}.war"
             webxml="${web.dir}/WEB-INF/web.xml">
            <fileset dir="${web.dir}">
                <include name="**/*.*"/>
            </fileset>
        </war>
        <copy todir="${deploy.path}" preservelastmodified="true">
            <fileset dir=".">
                <include name="*.war"/>
            </fileset>
        </copy>
    </target>
    
<!-- ============================================================== -->
<!-- Tomcat tasks - remove these if you don't have Tomcat installed -->
<!-- ============================================================== -->

    <path id="catalina-ant-classpath">
        <!-- We need the Catalina jars for Tomcat -->
        <!--  * for other app servers - check the docs -->
        <fileset dir="${appserver.lib}">
            <include name="catalina-ant.jar"/>
        </fileset>
    </path>

	
    <taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>
    <taskdef name="list" classname="org.apache.catalina.ant.ListTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>
    <taskdef name="start" classname="org.apache.catalina.ant.StartTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>
    <taskdef name="stop" classname="org.apache.catalina.ant.StopTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>

	
	
	
    <target name="install" description="Install application in Tomcat">
        <install url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"
                 path="/${name}"
                 war="${name}"/>
    </target>

    <target name="reload" description="Reload application in Tomcat">
        <reload url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"
                 path="/${name}"/>
    </target>

    <target name="start" description="Start Tomcat application">
        <start url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"
                 path="/${name}"/>
    </target>

    <target name="stop" description="Stop Tomcat application">
        <stop url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"
                 path="/${name}"/>
    </target>

    <target name="list" description="List Tomcat applications">
        <list url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"/>
    </target>

<!-- End Tomcat tasks -->

	<path id="tomcat.class.path">
	    <fileset dir="${appserver.home}/lib">
	        <include name="**/*.jar"/>
	        <include name="**/*.zip"/>
	    </fileset>
	    <pathelement location="${appserver.home}/bin/bootstrap.jar"/>
	    <pathelement location="${appserver.home}/bin/tomcat-juli.jar"/>
	</path>
	 
	 
	<target name="tomcat-start">
	    <java classname="org.apache.catalina.startup.Bootstrap" fork="true"
	        classpathref="tomcat.class.path">
	        <jvmarg value="-Dcatalina.home=${appserver.home}"/>
	    </java>
	</target>
	 
	<target name="tomcat-start-debug">
		    <java classname="org.apache.catalina.startup.Bootstrap" fork="true" classpathref="tomcat.class.path">
		        <jvmarg value="-Dcatalina.home=${appserver.home}"/>
		        <jvmarg value="-Xdebug"/>
		    	<jvmarg value="-javaagent:D:\dev\sts-3.2.0.RELEASE\plugins\org.zeroturnaround.eclipse.embedder_5.2.2.RELEASE-B-201304121109\jrebel\jrebel.jar"/>
		        <jvmarg
		value="-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n"/>
		    </java>
		</target>
	
	<target name="tomcat-stop" depends="tomcat-check-status" if="tomcat.started">
	    <java classname="org.apache.catalina.startup.Bootstrap" fork="true"
	        classpathref="tomcat.class.path">
	        <jvmarg value="-Dcatalina.home=${appserver.home}"/>
	        <arg line="stop"/>
	    </java>
	    <sleep seconds="5"/>
	</target>
	 
	<target name="tomcat-check-status">
	    <condition property="tomcat.started">
	        <socket server="localhost" port="8080"/>
	    </condition>
	</target>
	
</project>